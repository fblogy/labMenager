<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.SysBookMapper">
  <resultMap id="BaseResultMap" type="mybatis.model.SysBook">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_isbn" jdbcType="VARCHAR" property="bookIsbn" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_writer" jdbcType="VARCHAR" property="bookWriter" />
    <result column="book_pub" jdbcType="VARCHAR" property="bookPub" />
    <result column="book_status" jdbcType="TINYINT" property="bookStatus" />
    <result column="book_buyer" jdbcType="VARCHAR" property="bookBuyer" />
    <result column="book_mark" jdbcType="VARCHAR" property="bookMark" />
    <result column="book_borrower" jdbcType="VARCHAR" property="bookBorrower" />
    <result column="book_borrow_time" jdbcType="TIMESTAMP" property="bookBorrowTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, book_isbn, book_name, book_writer, book_pub, book_status, book_buyer, book_mark, 
    book_borrower, book_borrow_time
  </sql>
  <select id="selectByExample" parameterType="mybatis.model.SysBookExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="start !=0 or limit!=0">  
      limit #{start},#{limit}</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="mybatis.model.SysBookExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatis.model.SysBook">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_book (id, book_isbn, book_name, 
      book_writer, book_pub, book_status, 
      book_buyer, book_mark, book_borrower, 
      book_borrow_time)
    values (#{id,jdbcType=INTEGER}, #{bookIsbn,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{bookWriter,jdbcType=VARCHAR}, #{bookPub,jdbcType=VARCHAR}, #{bookStatus,jdbcType=TINYINT}, 
      #{bookBuyer,jdbcType=VARCHAR}, #{bookMark,jdbcType=VARCHAR}, #{bookBorrower,jdbcType=VARCHAR}, 
      #{bookBorrowTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="mybatis.model.SysBook">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="bookIsbn != null">
        book_isbn,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookWriter != null">
        book_writer,
      </if>
      <if test="bookPub != null">
        book_pub,
      </if>
      <if test="bookStatus != null">
        book_status,
      </if>
      <if test="bookBuyer != null">
        book_buyer,
      </if>
      <if test="bookMark != null">
        book_mark,
      </if>
      <if test="bookBorrower != null">
        book_borrower,
      </if>
      <if test="bookBorrowTime != null">
        book_borrow_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="bookIsbn != null">
        #{bookIsbn,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookWriter != null">
        #{bookWriter,jdbcType=VARCHAR},
      </if>
      <if test="bookPub != null">
        #{bookPub,jdbcType=VARCHAR},
      </if>
      <if test="bookStatus != null">
        #{bookStatus,jdbcType=TINYINT},
      </if>
      <if test="bookBuyer != null">
        #{bookBuyer,jdbcType=VARCHAR},
      </if>
      <if test="bookMark != null">
        #{bookMark,jdbcType=VARCHAR},
      </if>
      <if test="bookBorrower != null">
        #{bookBorrower,jdbcType=VARCHAR},
      </if>
      <if test="bookBorrowTime != null">
        #{bookBorrowTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatis.model.SysBookExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from sys_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookIsbn != null">
        book_isbn = #{record.bookIsbn,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookWriter != null">
        book_writer = #{record.bookWriter,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPub != null">
        book_pub = #{record.bookPub,jdbcType=VARCHAR},
      </if>
      <if test="record.bookStatus != null">
        book_status = #{record.bookStatus,jdbcType=TINYINT},
      </if>
      <if test="record.bookBuyer != null">
        book_buyer = #{record.bookBuyer,jdbcType=VARCHAR},
      </if>
      <if test="record.bookMark != null">
        book_mark = #{record.bookMark,jdbcType=VARCHAR},
      </if>
      <if test="record.bookBorrower != null">
        book_borrower = #{record.bookBorrower,jdbcType=VARCHAR},
      </if>
      <if test="record.bookBorrowTime != null">
        book_borrow_time = #{record.bookBorrowTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_book
    set id = #{record.id,jdbcType=INTEGER},
      book_isbn = #{record.bookIsbn,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_writer = #{record.bookWriter,jdbcType=VARCHAR},
      book_pub = #{record.bookPub,jdbcType=VARCHAR},
      book_status = #{record.bookStatus,jdbcType=TINYINT},
      book_buyer = #{record.bookBuyer,jdbcType=VARCHAR},
      book_mark = #{record.bookMark,jdbcType=VARCHAR},
      book_borrower = #{record.bookBorrower,jdbcType=VARCHAR},
      book_borrow_time = #{record.bookBorrowTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mybatis.model.SysBook">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_book
    <set>
      <if test="bookIsbn != null">
        book_isbn = #{bookIsbn,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookWriter != null">
        book_writer = #{bookWriter,jdbcType=VARCHAR},
      </if>
      <if test="bookPub != null">
        book_pub = #{bookPub,jdbcType=VARCHAR},
      </if>
      <if test="bookStatus != null">
        book_status = #{bookStatus,jdbcType=TINYINT},
      </if>
      <if test="bookBuyer != null">
        book_buyer = #{bookBuyer,jdbcType=VARCHAR},
      </if>
      <if test="bookMark != null">
        book_mark = #{bookMark,jdbcType=VARCHAR},
      </if>
      <if test="bookBorrower != null">
        book_borrower = #{bookBorrower,jdbcType=VARCHAR},
      </if>
      <if test="bookBorrowTime != null">
        book_borrow_time = #{bookBorrowTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="mybatis.model.SysBook">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_book
    set book_isbn = #{bookIsbn,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      book_writer = #{bookWriter,jdbcType=VARCHAR},
      book_pub = #{bookPub,jdbcType=VARCHAR},
      book_status = #{bookStatus,jdbcType=TINYINT},
      book_buyer = #{bookBuyer,jdbcType=VARCHAR},
      book_mark = #{bookMark,jdbcType=VARCHAR},
      book_borrower = #{bookBorrower,jdbcType=VARCHAR},
      book_borrow_time = #{bookBorrowTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="allAppRecByWord" resultMap="BaseResultMap">
  select sys_book.id,book_name,book_writer,book_pub,book_mark,user_name as book_buyer,book_status 
  from sys_book,sys_user
  where user_account=book_buyer and book_status between -3 and -1
  and ( book_name like #{word} or book_writer like #{word} or book_pub like #{word} or user_name like #{word})
  limit #{start},#{limit}
  </select>
  
  <select id="countAllAppRecByWord" resultType="java.lang.Integer">
  select count(*) from sys_book,sys_user
  where user_account=book_buyer and book_status between -3 and -1
  and ( book_name like #{word} or book_writer like #{word} or book_pub like #{word} or user_name like #{word})
  </select>
  
  <select id="allAppRec" resultMap="BaseResultMap">
  select sys_book.id,book_name,book_writer,book_pub,book_mark,user_name as book_buyer,book_status 
  from sys_book,sys_user
  where user_account=book_buyer and book_status between -3 and -1
  limit #{start},#{limit}
  </select>
  <select id="countAllAppRec" resultType="java.lang.Integer">
  select count(*) from sys_book,sys_user where user_account=book_buyer and book_status between -3 and -1
  </select>
  
  <select id="countMyAppRec" resultType="java.lang.Integer">
  select count(*) from sys_book where  book_buyer=#{account}
  </select>
  
  <select id="countMyAppRecByWord" resultType="java.lang.Integer">
  select count(*) from sys_book where 
  (book_isbn like #{word} or book_name like #{word} or book_writer like #{word} or book_pub like #{word})
  and book_buyer=#{account}
  </select>
  
  
  <select id="countAllBorrowByWord" resultType="java.lang.Integer">
  select count(*)  from sys_book where(book_isbn like #{name} or book_name like #{name} 
  or book_writer like #{name} or book_pub like #{name} or book_borrower like #{name} or book_mark like #{name})
   and book_status=0
  </select>
  
  <select id="countAllBorrow" resultType="java.lang.Integer">
  select count(*)  from sys_book where  book_status=0
  </select>
  
  <select id="countMe" resultType="java.lang.Integer">
  select count(*) from sys_book where book_borrower in (
  select user_name from sys_user where user_account=#{account}) and book_status=0
  </select>
  <select id="count" resultType="java.lang.Integer">
  select count(*) from sys_book where book_status not between -3 and -1 
  </select>
  
  <select id="countPart" resultType="java.lang.Integer">
  select count(*) from sys_book where book_status not between -3 and -1 
  and (book_isbn like #{name} or book_name like #{name} or book_writer like #{name} or book_pub like #{name} or (book_borrower like #{name} and book_status=0))
  </select>
  <select id="countByWordAndAccount" resultType="java.lang.Integer">
    
    select  count(*)
    from sys_book
    where
    book_borrower in (select user_name from sys_user where user_account=#{account})
     and book_status=0
     and  (book_isbn like #{name} or book_name like #{name} 
     or book_writer like #{name} or book_pub like #{name} or book_borrower like #{name})
  </select>
  <select id="selectByWordAndAccount" resultMap="BaseResultMap">
    
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_book
    where
    book_borrower in (select user_name from sys_user where user_account=#{account})
     and book_status=0
     and  (book_isbn like #{name} or book_name like #{name} 
     or book_writer like #{name} or book_pub like #{name} or book_borrower like #{name})
    <if test="start !=0 or limit!=0">  
      limit #{start},#{limit}</if>
  </select>
</mapper>
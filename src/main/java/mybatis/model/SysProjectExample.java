package mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SysProjectExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public SysProjectExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNull() {
            addCriterion("project_name is null");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNotNull() {
            addCriterion("project_name is not null");
            return (Criteria) this;
        }

        public Criteria andProjectNameEqualTo(String value) {
            addCriterion("project_name =", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotEqualTo(String value) {
            addCriterion("project_name <>", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThan(String value) {
            addCriterion("project_name >", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThanOrEqualTo(String value) {
            addCriterion("project_name >=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThan(String value) {
            addCriterion("project_name <", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThanOrEqualTo(String value) {
            addCriterion("project_name <=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLike(String value) {
            addCriterion("project_name like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotLike(String value) {
            addCriterion("project_name not like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameIn(List<String> values) {
            addCriterion("project_name in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotIn(List<String> values) {
            addCriterion("project_name not in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameBetween(String value1, String value2) {
            addCriterion("project_name between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotBetween(String value1, String value2) {
            addCriterion("project_name not between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectAccountIsNull() {
            addCriterion("project_account is null");
            return (Criteria) this;
        }

        public Criteria andProjectAccountIsNotNull() {
            addCriterion("project_account is not null");
            return (Criteria) this;
        }

        public Criteria andProjectAccountEqualTo(String value) {
            addCriterion("project_account =", value, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountNotEqualTo(String value) {
            addCriterion("project_account <>", value, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountGreaterThan(String value) {
            addCriterion("project_account >", value, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountGreaterThanOrEqualTo(String value) {
            addCriterion("project_account >=", value, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountLessThan(String value) {
            addCriterion("project_account <", value, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountLessThanOrEqualTo(String value) {
            addCriterion("project_account <=", value, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountLike(String value) {
            addCriterion("project_account like", value, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountNotLike(String value) {
            addCriterion("project_account not like", value, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountIn(List<String> values) {
            addCriterion("project_account in", values, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountNotIn(List<String> values) {
            addCriterion("project_account not in", values, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountBetween(String value1, String value2) {
            addCriterion("project_account between", value1, value2, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectAccountNotBetween(String value1, String value2) {
            addCriterion("project_account not between", value1, value2, "projectAccount");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameIsNull() {
            addCriterion("project_user_name is null");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameIsNotNull() {
            addCriterion("project_user_name is not null");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameEqualTo(String value) {
            addCriterion("project_user_name =", value, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameNotEqualTo(String value) {
            addCriterion("project_user_name <>", value, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameGreaterThan(String value) {
            addCriterion("project_user_name >", value, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("project_user_name >=", value, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameLessThan(String value) {
            addCriterion("project_user_name <", value, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameLessThanOrEqualTo(String value) {
            addCriterion("project_user_name <=", value, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameLike(String value) {
            addCriterion("project_user_name like", value, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameNotLike(String value) {
            addCriterion("project_user_name not like", value, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameIn(List<String> values) {
            addCriterion("project_user_name in", values, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameNotIn(List<String> values) {
            addCriterion("project_user_name not in", values, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameBetween(String value1, String value2) {
            addCriterion("project_user_name between", value1, value2, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectUserNameNotBetween(String value1, String value2) {
            addCriterion("project_user_name not between", value1, value2, "projectUserName");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredIsNull() {
            addCriterion("project_required is null");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredIsNotNull() {
            addCriterion("project_required is not null");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredEqualTo(Integer value) {
            addCriterion("project_required =", value, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredNotEqualTo(Integer value) {
            addCriterion("project_required <>", value, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredGreaterThan(Integer value) {
            addCriterion("project_required >", value, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredGreaterThanOrEqualTo(Integer value) {
            addCriterion("project_required >=", value, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredLessThan(Integer value) {
            addCriterion("project_required <", value, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredLessThanOrEqualTo(Integer value) {
            addCriterion("project_required <=", value, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredIn(List<Integer> values) {
            addCriterion("project_required in", values, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredNotIn(List<Integer> values) {
            addCriterion("project_required not in", values, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredBetween(Integer value1, Integer value2) {
            addCriterion("project_required between", value1, value2, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRequiredNotBetween(Integer value1, Integer value2) {
            addCriterion("project_required not between", value1, value2, "projectRequired");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkIsNull() {
            addCriterion("project_remark is null");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkIsNotNull() {
            addCriterion("project_remark is not null");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkEqualTo(String value) {
            addCriterion("project_remark =", value, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkNotEqualTo(String value) {
            addCriterion("project_remark <>", value, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkGreaterThan(String value) {
            addCriterion("project_remark >", value, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("project_remark >=", value, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkLessThan(String value) {
            addCriterion("project_remark <", value, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkLessThanOrEqualTo(String value) {
            addCriterion("project_remark <=", value, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkLike(String value) {
            addCriterion("project_remark like", value, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkNotLike(String value) {
            addCriterion("project_remark not like", value, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkIn(List<String> values) {
            addCriterion("project_remark in", values, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkNotIn(List<String> values) {
            addCriterion("project_remark not in", values, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkBetween(String value1, String value2) {
            addCriterion("project_remark between", value1, value2, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectRemarkNotBetween(String value1, String value2) {
            addCriterion("project_remark not between", value1, value2, "projectRemark");
            return (Criteria) this;
        }

        public Criteria andProjectStatusIsNull() {
            addCriterion("project_status is null");
            return (Criteria) this;
        }

        public Criteria andProjectStatusIsNotNull() {
            addCriterion("project_status is not null");
            return (Criteria) this;
        }

        public Criteria andProjectStatusEqualTo(Integer value) {
            addCriterion("project_status =", value, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusNotEqualTo(Integer value) {
            addCriterion("project_status <>", value, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusGreaterThan(Integer value) {
            addCriterion("project_status >", value, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("project_status >=", value, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusLessThan(Integer value) {
            addCriterion("project_status <", value, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusLessThanOrEqualTo(Integer value) {
            addCriterion("project_status <=", value, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusIn(List<Integer> values) {
            addCriterion("project_status in", values, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusNotIn(List<Integer> values) {
            addCriterion("project_status not in", values, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusBetween(Integer value1, Integer value2) {
            addCriterion("project_status between", value1, value2, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("project_status not between", value1, value2, "projectStatus");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeIsNull() {
            addCriterion("project_begin_time is null");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeIsNotNull() {
            addCriterion("project_begin_time is not null");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeEqualTo(Date value) {
            addCriterionForJDBCDate("project_begin_time =", value, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("project_begin_time <>", value, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("project_begin_time >", value, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("project_begin_time >=", value, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeLessThan(Date value) {
            addCriterionForJDBCDate("project_begin_time <", value, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("project_begin_time <=", value, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeIn(List<Date> values) {
            addCriterionForJDBCDate("project_begin_time in", values, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("project_begin_time not in", values, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("project_begin_time between", value1, value2, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectBeginTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("project_begin_time not between", value1, value2, "projectBeginTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeIsNull() {
            addCriterion("project_end_time is null");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeIsNotNull() {
            addCriterion("project_end_time is not null");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeEqualTo(Date value) {
            addCriterionForJDBCDate("project_end_time =", value, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("project_end_time <>", value, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("project_end_time >", value, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("project_end_time >=", value, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeLessThan(Date value) {
            addCriterionForJDBCDate("project_end_time <", value, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("project_end_time <=", value, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeIn(List<Date> values) {
            addCriterionForJDBCDate("project_end_time in", values, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("project_end_time not in", values, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("project_end_time between", value1, value2, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectEndTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("project_end_time not between", value1, value2, "projectEndTime");
            return (Criteria) this;
        }

        public Criteria andProjectHonorIsNull() {
            addCriterion("project_honor is null");
            return (Criteria) this;
        }

        public Criteria andProjectHonorIsNotNull() {
            addCriterion("project_honor is not null");
            return (Criteria) this;
        }

        public Criteria andProjectHonorEqualTo(String value) {
            addCriterion("project_honor =", value, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorNotEqualTo(String value) {
            addCriterion("project_honor <>", value, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorGreaterThan(String value) {
            addCriterion("project_honor >", value, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorGreaterThanOrEqualTo(String value) {
            addCriterion("project_honor >=", value, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorLessThan(String value) {
            addCriterion("project_honor <", value, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorLessThanOrEqualTo(String value) {
            addCriterion("project_honor <=", value, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorLike(String value) {
            addCriterion("project_honor like", value, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorNotLike(String value) {
            addCriterion("project_honor not like", value, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorIn(List<String> values) {
            addCriterion("project_honor in", values, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorNotIn(List<String> values) {
            addCriterion("project_honor not in", values, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorBetween(String value1, String value2) {
            addCriterion("project_honor between", value1, value2, "projectHonor");
            return (Criteria) this;
        }

        public Criteria andProjectHonorNotBetween(String value1, String value2) {
            addCriterion("project_honor not between", value1, value2, "projectHonor");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_project
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sys_project
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
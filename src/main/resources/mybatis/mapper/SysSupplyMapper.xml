<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.SysSupplyMapper">
  <resultMap id="BaseResultMap" type="mybatis.model.SysSupply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="supply_name" jdbcType="VARCHAR" property="supplyName" />
    <result column="supply_number" jdbcType="VARCHAR" property="supplyNumber" />
    <result column="supply_position" jdbcType="VARCHAR" property="supplyPosition" />
    <result column="supply_status" jdbcType="TINYINT" property="supplyStatus" />
    <result column="supply_buyer" jdbcType="VARCHAR" property="supplyBuyer" />
    <result column="supply_borrower" jdbcType="VARCHAR" property="supplyBorrower" />
    <result column="supply_mark" jdbcType="VARCHAR" property="supplyMark" />
    <result column="supply_borrow_time" jdbcType="TIMESTAMP" property="supplyBorrowTime" />
    <result column="supply_buy_time" jdbcType="TIMESTAMP" property="supplyBuyTime" />
    <result column="supply_cost" jdbcType="VARCHAR" property="supplyCost" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, supply_name, supply_number, supply_position, supply_status, supply_buyer, supply_borrower, 
    supply_mark, supply_borrow_time, supply_buy_time, supply_cost
  </sql>
  <select id="selectByExample" parameterType="mybatis.model.SysSupplyExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_supply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="start !=0 or limit!=0">  
      limit #{start},#{limit}</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_supply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_supply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="mybatis.model.SysSupplyExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_supply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatis.model.SysSupply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_supply (id, supply_name, supply_number, 
      supply_position, supply_status, supply_buyer, 
      supply_borrower, supply_mark, supply_borrow_time, 
      supply_buy_time, supply_cost)
    values (#{id,jdbcType=INTEGER}, #{supplyName,jdbcType=VARCHAR}, #{supplyNumber,jdbcType=VARCHAR}, 
      #{supplyPosition,jdbcType=VARCHAR}, #{supplyStatus,jdbcType=TINYINT}, #{supplyBuyer,jdbcType=VARCHAR}, 
      #{supplyBorrower,jdbcType=VARCHAR}, #{supplyMark,jdbcType=VARCHAR}, #{supplyBorrowTime,jdbcType=TIMESTAMP}, 
      #{supplyBuyTime,jdbcType=TIMESTAMP}, #{supplyCost,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="mybatis.model.SysSupply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_supply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="supplyName != null">
        supply_name,
      </if>
      <if test="supplyNumber != null">
        supply_number,
      </if>
      <if test="supplyPosition != null">
        supply_position,
      </if>
      <if test="supplyStatus != null">
        supply_status,
      </if>
      <if test="supplyBuyer != null">
        supply_buyer,
      </if>
      <if test="supplyBorrower != null">
        supply_borrower,
      </if>
      <if test="supplyMark != null">
        supply_mark,
      </if>
      <if test="supplyBorrowTime != null">
        supply_borrow_time,
      </if>
      <if test="supplyBuyTime != null">
        supply_buy_time,
      </if>
      <if test="supplyCost != null">
        supply_cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="supplyName != null">
        #{supplyName,jdbcType=VARCHAR},
      </if>
      <if test="supplyNumber != null">
        #{supplyNumber,jdbcType=VARCHAR},
      </if>
      <if test="supplyPosition != null">
        #{supplyPosition,jdbcType=VARCHAR},
      </if>
      <if test="supplyStatus != null">
        #{supplyStatus,jdbcType=TINYINT},
      </if>
      <if test="supplyBuyer != null">
        #{supplyBuyer,jdbcType=VARCHAR},
      </if>
      <if test="supplyBorrower != null">
        #{supplyBorrower,jdbcType=VARCHAR},
      </if>
      <if test="supplyMark != null">
        #{supplyMark,jdbcType=VARCHAR},
      </if>
      <if test="supplyBorrowTime != null">
        #{supplyBorrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplyBuyTime != null">
        #{supplyBuyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplyCost != null">
        #{supplyCost,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatis.model.SysSupplyExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from sys_supply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_supply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.supplyName != null">
        supply_name = #{record.supplyName,jdbcType=VARCHAR},
      </if>
      <if test="record.supplyNumber != null">
        supply_number = #{record.supplyNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.supplyPosition != null">
        supply_position = #{record.supplyPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.supplyStatus != null">
        supply_status = #{record.supplyStatus,jdbcType=TINYINT},
      </if>
      <if test="record.supplyBuyer != null">
        supply_buyer = #{record.supplyBuyer,jdbcType=VARCHAR},
      </if>
      <if test="record.supplyBorrower != null">
        supply_borrower = #{record.supplyBorrower,jdbcType=VARCHAR},
      </if>
      <if test="record.supplyMark != null">
        supply_mark = #{record.supplyMark,jdbcType=VARCHAR},
      </if>
      <if test="record.supplyBorrowTime != null">
        supply_borrow_time = #{record.supplyBorrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.supplyBuyTime != null">
        supply_buy_time = #{record.supplyBuyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.supplyCost != null">
        supply_cost = #{record.supplyCost,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_supply
    set id = #{record.id,jdbcType=INTEGER},
      supply_name = #{record.supplyName,jdbcType=VARCHAR},
      supply_number = #{record.supplyNumber,jdbcType=VARCHAR},
      supply_position = #{record.supplyPosition,jdbcType=VARCHAR},
      supply_status = #{record.supplyStatus,jdbcType=TINYINT},
      supply_buyer = #{record.supplyBuyer,jdbcType=VARCHAR},
      supply_borrower = #{record.supplyBorrower,jdbcType=VARCHAR},
      supply_mark = #{record.supplyMark,jdbcType=VARCHAR},
      supply_borrow_time = #{record.supplyBorrowTime,jdbcType=TIMESTAMP},
      supply_buy_time = #{record.supplyBuyTime,jdbcType=TIMESTAMP},
      supply_cost = #{record.supplyCost,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mybatis.model.SysSupply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_supply
    <set>
      <if test="supplyName != null">
        supply_name = #{supplyName,jdbcType=VARCHAR},
      </if>
      <if test="supplyNumber != null">
        supply_number = #{supplyNumber,jdbcType=VARCHAR},
      </if>
      <if test="supplyPosition != null">
        supply_position = #{supplyPosition,jdbcType=VARCHAR},
      </if>
      <if test="supplyStatus != null">
        supply_status = #{supplyStatus,jdbcType=TINYINT},
      </if>
      <if test="supplyBuyer != null">
        supply_buyer = #{supplyBuyer,jdbcType=VARCHAR},
      </if>
      <if test="supplyBorrower != null">
        supply_borrower = #{supplyBorrower,jdbcType=VARCHAR},
      </if>
      <if test="supplyMark != null">
        supply_mark = #{supplyMark,jdbcType=VARCHAR},
      </if>
      <if test="supplyBorrowTime != null">
        supply_borrow_time = #{supplyBorrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplyBuyTime != null">
        supply_buy_time = #{supplyBuyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplyCost != null">
        supply_cost = #{supplyCost,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="mybatis.model.SysSupply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_supply
    set supply_name = #{supplyName,jdbcType=VARCHAR},
      supply_number = #{supplyNumber,jdbcType=VARCHAR},
      supply_position = #{supplyPosition,jdbcType=VARCHAR},
      supply_status = #{supplyStatus,jdbcType=TINYINT},
      supply_buyer = #{supplyBuyer,jdbcType=VARCHAR},
      supply_borrower = #{supplyBorrower,jdbcType=VARCHAR},
      supply_mark = #{supplyMark,jdbcType=VARCHAR},
      supply_borrow_time = #{supplyBorrowTime,jdbcType=TIMESTAMP},
      supply_buy_time = #{supplyBuyTime,jdbcType=TIMESTAMP},
      supply_cost = #{supplyCost,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="allAppRecByWord" resultMap="BaseResultMap">
  select sys_supply.id,supply_name,supply_number,supply_cost,supply_mark,user_name as supply_buyer,supply_status 
  from sys_supply,sys_user
  where  user_account=supply_buyer and supply_status between -3 and -1
  and(supply_number like #{word} or supply_name like #{word} 
  or supply_position like #{word} or supply_mark like #{word})
  limit #{start},#{limit}
  </select>
  
  <select id="countAllAppRecByWord" resultType="java.lang.Integer">
  select count(*) from sys_supply,sys_user
  where user_account=supply_buyer and supply_status between -3 and -1
  and (supply_number like #{word} or supply_name like #{word} 
  or supply_position like #{word} or supply_mark like #{word})
  </select>
  
  <select id="allAppRec" resultMap="BaseResultMap">
  select sys_supply.id,supply_name,supply_number,supply_cost,supply_mark,user_name as supply_buyer,supply_status 
  from sys_supply,sys_user
  where user_account=supply_buyer and supply_status between -3 and -1
  limit #{start},#{limit}
  </select>
  <select id="countAllAppRec" resultType="java.lang.Integer">
  select count(*) from sys_supply,sys_user where user_account=supply_buyer and supply_status between -3 and -1
  </select>
  
  <select id="countMyAppRec" resultType="java.lang.Integer">
  select count(*) from sys_supply where  supply_buyer=#{account}
  </select>
  
  <select id="countMyAppRecByWord" resultType="java.lang.Integer">
  select count(*) from sys_supply where (supply_number like #{word} or supply_name like #{word} 
  or supply_position like #{word} or supply_mark like #{word})
  and supply_buyer=#{account}
  </select>
  
  
  <select id="countAllBorrowByWord" resultType="java.lang.Integer">
  select count(*)  from sys_supply where  (supply_number like #{name} or supply_name like #{name} 
  or supply_position like #{name} or supply_borrower like #{name})
   and supply_status=0
  </select>
  
  <select id="countAllBorrow" resultType="java.lang.Integer">
  select count(*)  from sys_supply where  supply_status=0
  </select>
  
  <select id="countMe" resultType="java.lang.Integer">
  select count(*) from sys_supply where supply_borrower in (
  select user_name from sys_user where user_account=#{account}) and supply_status=0
  </select>
  <select id="count" resultType="java.lang.Integer">
  select count(*) from sys_supply where supply_status not between -3 and -1 
  </select>
  
  <select id="countPart" resultType="java.lang.Integer">
  select count(*) from sys_supply where supply_status not between -3 and -1 
  and (supply_number like #{name} or supply_name like #{name} or supply_position like #{name} or (supply_status=0 and supply_borrower like #{name}))
  </select>
  <select id="countByWordAndAccount" resultType="java.lang.Integer">
    
    select  count(*)
    from sys_supply
    where
    supply_borrower in (select user_name from sys_user where user_account=#{account})
     and supply_status=0
     and  (supply_number like #{name} or supply_name like #{name} or supply_position like #{name} or supply_borrower like #{name})
  </select>
  <select id="selectByWordAndAccount" resultMap="BaseResultMap">
    
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_book
    where
    book_borrower in (select user_name from sys_user where user_account=#{account})
     and book_status=0
     and  (book_isbn like #{name} or book_name like #{name} 
     or book_writer like #{name} or book_pub like #{name} or book_borrower like #{name})
    <if test="start !=0 or limit!=0">  
      limit #{start},#{limit}</if>
  </select>
</mapper>